#:kivy 1.10.0
#:include ui/controls.kv
#:include ui/labels.kv

#:import g _global_

<View>:
	frame: frame
	id: container
	rows: 3
	SmallTextLabel:
		size_hint: (1, .03)
		text: 'Visual Orchestrator'

	BoxLayout:
		orientation: "horizontal"
		CameraStream:
			id: frame
			source: ''
			size_hint: (.66, 1)
		BoxLayout:
			orientation: 'vertical'
			size_hint: (.34, 1)
			spacing: (5, 5)
			padding: [10, 5]
			BoxLayout:
				canvas:
					Color:
						rgb: (.1, .1, .1)
					Rectangle:
						pos: self.pos
						size: self.size
				id: section_1
				orientation: 'horizontal'
				size_hint: (1, .22)
				padding: 5
				spacing: 5
				BoxLayout:
					id: section_1a
					orientation: 'horizontal'
					size_hint: (.7, 1)
					padding: [0, 20, 0, 7]
					AnchorLayout:
						SelectButton:
							id: filter_borders
							name: "filter_borders"
							on_press: root.set_view(self)
							text: 'Contours'
							state: 'normal' if not g.gui_properties["section_1a"]["filter_borders"] else 'down'
					AnchorLayout:
						SelectButton:
							id: filter_gray
							name: "filter_gray"
							on_press: root.set_view(self)
							text: 'Grayscale'
							state: 'normal' if not g.gui_properties["section_1a"]["filter_gray"] else 'down'
					AnchorLayout:
						SelectButton:
							id: filter_blur
							name: "filter_blur"
							on_press: root.set_view(self)
							text: 'Grayscale \nBlur'
							halign: 'center'
							state: 'normal' if not g.gui_properties["section_1a"]["filter_blur"] else 'down'
				BoxLayout:
					id: section_1b
					orientation: 'vertical'
					size_hint: (.3, 1)
					padding: [0, 15]
					MediumTextLabel:
						text: "Detection"
					SwitchButton:
						id: detection_view
						name: "detection_view"
						on_active: root.set_feeback(self)
						active: g.gui_properties["section_1b"]["detection_view"]
					MediumTextLabel:
						text: "All Squares"
					SwitchButton:
						id: all_squares_view
						name: "all_squares_view"
						on_active: root.set_feeback(self)
						active: g.gui_properties["section_1b"]["all_squares_view"]
			BoxLayout:
				canvas:
					Color:
						rgb: (.1, .1, .1)
					Rectangle:
						pos: self.pos
						size: self.size
				id: section_2
				orientation: 'horizontal'
				size_hint: (1, .18)
				padding: 5
				spacing: 5
				BoxLayout:
					orientation: 'vertical'
					SmallTextLabel:
						text: 'FPS: %s' % int(variable_fps.value)
					VariableControl:
						id: variable_fps
						name: "variable_fps"
						range: (1, 60)
						value: g.gui_properties["section_2"]["variable_fps"]
						step: 1
						on_value: root.set_variables(self)
				BoxLayout:
					orientation: 'vertical'
					SmallTextLabel:
						text: 'Blur: %s' % int(variable_blur.value_normalized * 100)
					VariableControl:
						id: variable_blur
						name: "variable_blur"
						range: (1, 21)
						value: g.gui_properties["section_2"]["variable_blur"]
						step: 2
						on_value: root.set_variables(self)
				BoxLayout:
					orientation: 'vertical'
					SmallTextLabel:
						text: 'MinSqr: %s' % int(variable_minsqr.value_normalized * 100)
					VariableControl:
						id: variable_minsqr
						name: "variable_minsqr"
						range: (0, 2500)
						value: g.gui_properties["section_2"]["variable_minsqr"]
						step: 50
						on_value: root.set_variables(self)
				BoxLayout:
					orientation: 'vertical'
					SmallTextLabel:
						text: 'MaxSqr: %s' % int(variable_maxsqr.value_normalized * 100)
					VariableControl:
						id: variable_maxsqr
						name: "variable_maxsqr"
						range: (5000, 200000)
						value: g.gui_properties["section_2"]["variable_maxsqr"]
						step: 1000
						on_value: root.set_variables(self)
				BoxLayout:
					orientation: 'vertical'
					SmallTextLabel:
						text: 'SqrDst: %s' % int(variable_sqrdst.value * 100)
					VariableControl:
						id: variable_sqrdst
						name: "variable_sqrdst"
						range: (0, 1)
						value: g.gui_properties["section_2"]["variable_sqrdst"]
						step: .05
						on_value: root.set_variables(self)
				BoxLayout:
					orientation: 'vertical'
					SmallTextLabel:
						text: 'CannyT: %s' % int(variable_cannyt.value * 100)
					VariableControl:
						id: variable_cannyt
						name: "variable_cannyt"
						range: (0, 1)
						value: g.gui_properties["section_2"]["variable_cannyt"]
						step: .05
						on_value: root.set_variables(self)
				BoxLayout:
					orientation: 'vertical'
					SmallTextLabel:
						text: 'ErrorR: %s' % int(variable_errorr.value_normalized * 100)
					VariableControl:
						id: variable_errorr
						name: "variable_errorr"
						range: (0, 90)
						value: g.gui_properties["section_2"]["variable_errorr"]
						step: 1
						on_value: root.set_variables(self)
				BoxLayout:
					orientation: 'vertical'
					SmallTextLabel:
						text: 'ErrorD: %s' % int(variable_errord.value_normalized * 100)
					VariableControl:
						id: variable_errord
						name: "variable_errord"
						range: (0, 2)
						value: g.gui_properties["section_2"]["variable_errord"]
						step: .1
						on_value: root.set_variables(self)
			BoxLayout:
				canvas:
					Color:
						rgb: (.1, .1, .1)
					Rectangle:
						pos: self.pos
						size: (self.width, self.height - 10)
				orientation: 'horizontal'
				size_hint: (1, .25)
				id: section_3
				BoxLayout:
					orientation: 'horizontal'
					size_hint: (.30, 1)
					padding: [5, 20, 5, 7]
					AnchorLayout:
						SelectButton:
							id: toggle_server
							name: "server"
							on_press: root.toggle_server(self)
							text: 'Connect'
				BoxLayout:
					orientation: 'horizontal'
					size_hint: (.70, 1)
					padding: [0, 10, 8, 10]
					canvas:
						Color:
							rgb: (0, 0, 0)
						Rectangle:
							pos: (self.x, self.y + 8)
							size: (self.width - 5, self.height - 31)
					AnchorLayout:
						SMediumTextLabel:
							id: planner_feedback
							text: "No Plans to Execute"
			BoxLayout:
				orientation: 'horizontal'
				size_hint: (1, .35)
				id: section_4
				SmallTextLabel:
					text: "4"
	SmallTextLabel:
		size_hint: (1, .03)
		text: 'placeholder_3'